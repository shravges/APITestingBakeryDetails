{
	"info": {
		"_postman_id": "10817c81-5d93-4076-9a2b-44c3a4fa6249",
		"name": "TestBakeryDetails",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18923350"
	},
	"item": [
		{
			"name": "GetBakeryDetails",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsondata = pm.response.json();\r",
							"\r",
							"pm.test(\"Check Response Status Code\", function()\r",
							"{\r",
							"    pm.response.to.have.status(200);\r",
							"}\r",
							");\r",
							"\r",
							"pm.test(\"Check Cake Id\", function()\r",
							"{\r",
							"    pm.expect(jsondata.id).is.eql(\"SampleCake\");\r",
							"\r",
							"}\r",
							");\r",
							"\r",
							"pm.test(\"Check availability of batter flavour - Blueberry\", function()\r",
							"{\r",
							"    console.log(jsondata.batters.batter.length);\r",
							"\r",
							"    for(var i=0;i<jsondata.batters.batter.length;i++)\r",
							"    {\r",
							"       // console.log(jsondata.batters.batter[i].type);\r",
							"        if(jsondata.batters.batter[i].type ==\"Blueberry\")\r",
							"        {\r",
							"            console.log(\"Blueberry flavour is shown as batter type\");\r",
							"        }\r",
							"    }\r",
							"}\r",
							");\r",
							"\r",
							"pm.test(\"Check price of all batters\", function()\r",
							"{\r",
							"    var sum=0;\r",
							"    for(var i=0;i<jsondata.batters.batter.length;i++)\r",
							"    {\r",
							"        sum=sum+jsondata.batters.batter[i].price;\r",
							"    }\r",
							"    pm.expect(sum).is.eql(600);\r",
							"}\r",
							");\r",
							"\r",
							"pm.test(\"Check total toppings\", function()\r",
							"{\r",
							"    pm.expect(jsondata.topping.length).is.eql(2);\r",
							"}\r",
							");\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/GetBakeryDetails",
					"host": [
						"{{url}}"
					],
					"path": [
						"GetBakeryDetails"
					]
				}
			},
			"response": [
				{
					"name": "Default",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/GetBakeryDetails",
							"host": [
								"{{url}}"
							],
							"path": [
								"GetBakeryDetails"
							]
						}
					},
					"code": 200,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\n\t\"id\": \"SampleCake\",\n\t\"type\": \"donut\",\n\t\"name\": \"Cake\",\n\t\"ppu\": 1000,\n\t\"batters\":\n\t\t{\n\t\t\t\"batter\":\n\t\t\t\t[\n\t\t\t\t\t{ \"id\": \"1001\", \"type\": \"Regular\", \"price\": 100 },\n\t\t\t\t\t{ \"id\": \"1002\", \"type\": \"Chocolate\" , \"price\": 200},\n\t\t\t\t\t{ \"id\": \"1003\", \"type\": \"Blueberry\" , \"price\": 300}\n\t\t\t\t]\n\t\t},\n\t\"topping\":\n\t\t[\n\t\t\t{ \"id\": \"5001\", \"type\": \"None\" },\n\t\t\t{ \"id\": \"5002\", \"type\": \"Glazed\" }\n\t\t]\n}"
				}
			]
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "https://74ece9dc-6610-4397-8e02-793bc6c60aed.mock.pstmn.io"
		}
	]
}